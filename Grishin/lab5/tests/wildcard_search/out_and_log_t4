============OUT============
1
5
==========END OUT==========


============LOG============
add key: qwer
trie is empty, root created
create children with character: q
create children with character: w
create children with character: e
create children with character: r

Machinizer initiated
built suffix link for 0 node. 
suffix-link calculator initiated for node: 0
suffix[root] = root
Suffix link leads to 0 node

built suffix link for 1 node. 
suffix-link calculator initiated for node: 1
this is a child of root. suffix = root
Suffix link leads to 0 node

built suffix link for 2 node. 
suffix-link calculator initiated for node: 2
parent suffix 0jump through suffix link
suffix path led to root, suffix link set on root
Suffix link leads to 0 node

built suffix link for 3 node. 
suffix-link calculator initiated for node: 3
parent suffix 0jump through suffix link
suffix path led to root, suffix link set on root
Suffix link leads to 0 node

built suffix link for 4 node. 
suffix-link calculator initiated for node: 4
parent suffix 0jump through suffix link
suffix path led to root, suffix link set on root
Suffix link leads to 0 node

search initiated. Initial state is root
~~~calculate new state
current state has child with 'q' character. Its id is 1
~~~new state is 1

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'w' character. Its id is 2
~~~new state is 2

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'e' character. Its id is 3
~~~new state is 3

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'r' character. Its id is 4
~~~new state is 4

new state is not root, we have to check node and its suffix path
there could be ends of patterns
state 4 is end of pattern. pattern found on position 0
supposed full pattern positions: 0 
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
There is no child with 'q' character. Set state as suffix link. New state is 0
current state has child with 'q' character. Its id is 1
~~~new state is 1

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'w' character. Its id is 2
~~~new state is 2

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'e' character. Its id is 3
~~~new state is 3

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'r' character. Its id is 4
~~~new state is 4

new state is not root, we have to check node and its suffix path
there could be ends of patterns
state 4 is end of pattern. pattern found on position 4
supposed full pattern positions: 4 
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
There is no child with 'q' character. Set state as suffix link. New state is 0
current state has child with 'q' character. Its id is 1
~~~new state is 1

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'w' character. Its id is 2
~~~new state is 2

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'e' character. Its id is 3
~~~new state is 3

new state is not root, we have to check node and its suffix path
there could be ends of patterns
go deeper on the suffix link. Now, state to check is 0
~~~calculate new state
current state has child with 'r' character. Its id is 4
~~~new state is 4

new state is not root, we have to check node and its suffix path
there could be ends of patterns
state 4 is end of pattern. pattern found on position 8
supposed full pattern positions: 8 
go deeper on the suffix link. Now, state to check is 0
==========END LOG==========

